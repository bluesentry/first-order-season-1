name: Upload Logs to S3

on:
  # Trigger on push to main branch
  push:
    branches: [ main ]
    paths:
      - 'logs/**'
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      log_path:
        description: 'Path to logs directory or file'
        required: false
        default: 'logs'
      destination_prefix:
        description: 'S3 destination prefix (within log-analysis/)'
        required: false
        default: 'github-workflow-logs'

permissions:
  id-token: write  # Required for OIDC authentication with AWS
  contents: read

env:
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 704855531002
  ROLE_NAME: BlueSentry
  S3_BUCKET: first-order-application-logs
  S3_PREFIX: log-analysis

jobs:
  upload-logs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Set log path
        id: set-log-path
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.log_path }}" ]; then
            echo "LOG_PATH=${{ github.event.inputs.log_path }}" >> $GITHUB_ENV
          else
            echo "LOG_PATH=logs" >> $GITHUB_ENV
          fi
      
      - name: Set destination prefix
        id: set-destination
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.destination_prefix }}" ]; then
            echo "DEST_PREFIX=${{ github.event.inputs.destination_prefix }}" >> $GITHUB_ENV
          else
            echo "DEST_PREFIX=github-workflow-logs" >> $GITHUB_ENV
          fi
      
      - name: Create logs directory if it doesn't exist
        run: |
          if [ ! -d "${{ env.LOG_PATH }}" ]; then
            mkdir -p ${{ env.LOG_PATH }}
            echo "Created logs directory as it did not exist"
            echo "This is a sample log file" > ${{ env.LOG_PATH }}/sample.log
            echo "Created sample log file for demonstration"
          fi
      
      - name: Generate timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_ENV
      
      - name: Upload logs to S3
        run: |
          # Check if the log path exists
          if [ -e "${{ env.LOG_PATH }}" ]; then
            # If it's a directory, sync all contents
            if [ -d "${{ env.LOG_PATH }}" ]; then
              echo "Uploading all logs from directory: ${{ env.LOG_PATH }}"
              aws s3 sync ${{ env.LOG_PATH }} s3://${{ env.S3_BUCKET }}/${{ env.S3_PREFIX }}/${{ env.DEST_PREFIX }}/${{ env.TIMESTAMP }}/
            # If it's a file, upload just that file
            elif [ -f "${{ env.LOG_PATH }}" ]; then
              echo "Uploading single log file: ${{ env.LOG_PATH }}"
              FILENAME=$(basename ${{ env.LOG_PATH }})
              aws s3 cp ${{ env.LOG_PATH }} s3://${{ env.S3_BUCKET }}/${{ env.S3_PREFIX }}/${{ env.DEST_PREFIX }}/${{ env.TIMESTAMP }}/$FILENAME
            fi
            echo "Logs uploaded successfully to s3://${{ env.S3_BUCKET }}/${{ env.S3_PREFIX }}/${{ env.DEST_PREFIX }}/${{ env.TIMESTAMP }}/"
          else
            echo "Error: Log path '${{ env.LOG_PATH }}' does not exist."
            exit 1
          fi
